<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="databaseclass.finalproject.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="databaseclass.finalproject.entity.Resource">
    <id column="resourceid" jdbcType="INTEGER" property="resourceid" />
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="restype" jdbcType="INTEGER" property="restype" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
    <result column="picaddr" jdbcType="VARCHAR" property="picaddr" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="r_like" jdbcType="INTEGER" property="rLike" />
    <result column="r_time" jdbcType="TIMESTAMP" property="rTime" />
    <result column="r_point" jdbcType="INTEGER" property="point" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resource
    where resourceid = #{resourceid,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="databaseclass.finalproject.entity.Resource">
    insert into resource (username, restype, URL, 
      picaddr, title, content, r_time)
    values (#{username, jdbcType=VARCHAR}, #{restype,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{picaddr,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{rTime, jdbcType=TIMESTAMP})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="databaseclass.finalproject.entity.Resource">
    update resource
    set username= #{username, jdbcType=VARCHAR} 
      restype = #{restype,jdbcType=INTEGER},
      URL = #{url,jdbcType=VARCHAR},
      picaddr = #{picaddr,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      r_like = #{rLike,jdbcType=INTEGER},
      r_time = #{rTime, jdbcType=TIMESTAMP}
      r_point = #{point, jdbcType=INTEGER}
    where resourceid = #{resourceid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    
    select *
    from resource
    where resourceid = #{resourceid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    
    select *
    from resource
  </select>
  
  <select id="selectByOrder" parameterType="map" resultMap="BaseResultMap">
  	select * from resource
  	where restype = #{fieldid, jdbcType=INTEGER}
  	order by r_like desc
  	limit #{limit};
  </select>
  
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select * from resource
  	where username=#{username, jdbcType=VARCHAR}
  </select>
  <select id="selectByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select * from resource
  	where restype=#{resourceType, jdbcType=INTEGER}
  	order by r_like desc
  </select>
  <select id="selectByUsernameWithLimit" parameterType="map" resultMap="BaseResultMap">
  	select * from resource
  	where username=#{username, jdbcType=VARCHAR}
  	order by r_like desc
  	limit #{limit}
  </select>
  
  <select id="selectUploadCount" parameterType="java.lang.String" resultType="int">
  	select count(*) from resource
  	where username=#{username, jdbcType=VARCHAR}
  </select>
  
  <select id="selectAmount" resultType="java.lang.Integer">
  	select count(*) from resource
  </select>
</mapper>